{"version":3,"sources":["components/Categories/Categories.js","components/NewsItem/NewsItem.js","components/NewsList/NewsList.js","pages/NewsPage.js","App.js","index.js"],"names":["cx","classNames","bind","styles","Category","styled","NavLink","categories","name","text","Categories","onSelect","category","className","map","c","key","activeClassName","exact","to","NewsItem","article","title","description","url","urlToImage","href","target","rel","src","alt","NewsList","useState","articles","setArticles","loading","setLoading","console","log","useEffect","a","query","axios","get","response","data","fetchData","NewsPage","match","params","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"6wBAMA,IAAMA,EAAKC,IAAWC,KAAKC,KAErBC,EAAWC,YAAOC,IAAPD,CAAH,KA0BRE,EAAa,CACjB,CACEC,KAAM,MACNC,KAAM,4BAER,CACED,KAAM,WACNC,KAAM,4BAER,CACED,KAAM,gBACNC,KAAM,wCAER,CACED,KAAM,SACNC,KAAM,gBAER,CACED,KAAM,UACNC,KAAM,gBAER,CACED,KAAM,SACNC,KAAM,sBAER,CACED,KAAM,aACNC,KAAM,iBAqBKC,EAjBI,SAAC,GAA2B,EAAzBC,SAAyB,EAAfC,SAC9B,OACE,yBAAKC,UAAWb,EAAG,qBAChBO,EAAWO,KAAI,SAAAC,GAAC,OACf,kBAACX,EAAD,CACEY,IAAKD,EAAEP,KACPS,gBAAgB,SAChBC,MAAkB,QAAXH,EAAEP,KACTW,GAAe,QAAXJ,EAAEP,KAAiB,IAAnB,WAA6BO,EAAEP,OAElCO,EAAEN,W,oFCvEPT,EAAKC,IAAWC,KAAKC,KA0BZiB,EAxBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,WAEjC,OACE,yBAAKZ,UAAWb,EAAG,oBAChByB,GACC,yBAAKZ,UAAWb,EAAG,cACjB,uBAAG0B,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAChC,yBAAKC,IAAKJ,EAAYK,IAAI,gBAIhC,yBAAKjB,UAAWb,EAAG,aACjB,4BACE,uBAAG0B,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BN,IAGL,2BAAIC,M,iBCjBNvB,EAAKC,IAAWC,KAAKC,KA6CZ4B,EA3CE,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EACDoB,mBAAS,MADR,mBAC1BC,EAD0B,KAChBC,EADgB,OAEHF,oBAAS,GAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,KAsBjC,OAnBAC,QAAQC,IAAI1B,GACZ2B,qBAAU,YAEO,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAW,GADK,SAGRK,EAAqB,QAAb7B,EAAqB,GAArB,oBAAuCA,GAHvC,SAIS8B,IAAMC,IAAN,yDAC6BF,EAD7B,6CAJT,OAIRG,EAJQ,OAOdV,EAAYU,EAASC,KAAKZ,UAPZ,gDASdI,QAAQC,IAAR,MATc,QAWhBF,GAAW,GAXK,yDAAH,qDAafU,KACC,CAAClC,IAEAuB,EAEA,yBAAKtB,UAAWb,EAAG,oBACjB,kBAAC,IAAD,OAKDiC,EAKH,yBAAKpB,UAAWb,EAAG,oBAChBiC,EAASnB,KAAI,SAAAO,GAAO,OACnB,kBAAC,EAAD,CAAUL,IAAKK,EAAQG,IAAKH,QAASA,QANlC,MCxBI0B,EAZE,SAAC,GAAe,IAEzBnC,EAFwB,EAAZoC,MAEKC,OAAOrC,UAAY,MAE1C,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUA,SAAUA,MCHXsC,EAJH,WACV,OAAO,kBAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWL,K,MCC9CM,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.024ba546.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Categories.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #22b8cf;\r\n    color: #22b8cf;\r\n    &:hover {\r\n      color: #3bc9db;\r\n    }\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst categories = [\r\n  {\r\n    name: 'all',\r\n    text: '전체보기',\r\n  },\r\n  {\r\n    name: 'business',\r\n    text: '비즈니스',\r\n  },\r\n  {\r\n    name: 'entertainment',\r\n    text: '엔터테인먼트',\r\n  },\r\n  {\r\n    name: 'health',\r\n    text: '건강',\r\n  },\r\n  {\r\n    name: 'science',\r\n    text: '과학',\r\n  },\r\n  {\r\n    name: 'sports',\r\n    text: '스포츠',\r\n  },\r\n  {\r\n    name: 'technology',\r\n    text: '기술',\r\n  },\r\n];\r\n\r\nconst Categories = ({ onSelect, category }) => {\r\n  return (\r\n    <div className={cx('categories-block')}>\r\n      {categories.map(c => (\r\n        <Category\r\n          key={c.name}\r\n          activeClassName=\"active\"\r\n          exact={c.name === 'all'}\r\n          to={c.name === 'all' ? '/' : `/${c.name}`}\r\n        >\r\n          {c.text}\r\n        </Category>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './NewsItem.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst NewsItem = ({ article }) => {\r\n  const { title, description, url, urlToImage } = article;\r\n\r\n  return (\r\n    <div className={cx('news-item-block')}>\r\n      {urlToImage && (\r\n        <div className={cx('thumbnail')}>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={urlToImage} alt=\"thumbnail\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n      <div className={cx('contents')}>\r\n        <h2>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </h2>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport axios from 'axios';\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport NewsItem from '../NewsItem';\r\nimport styles from './NewsItem.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [articles, setArticles] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  console.log(category);\r\n  useEffect(() => {\r\n    // async를 사용하는 함수 따로 선언\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const query = category === 'all' ? '' : `&category=${category}`;\r\n        const response = await axios.get(\r\n          `https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=cd17adb8cbaa410a8a79e4dee580e4e2`,\r\n        );\r\n        setArticles(response.data.articles);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [category]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={cx('news-list-block')}>\r\n        <ScaleLoader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!articles) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={cx('news-list-block')}>\r\n      {articles.map(article => (\r\n        <NewsItem key={article.url} article={article} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({ match }) => {\r\n  // 카테고리가 선택되지 않았으면 기본값 all로 사용\r\n  const category = match.params.category || 'all';\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <NewsList category={category} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport NewsPage from './pages/NewsPage';\n\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}